name: Release on tag

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write   # potrzebne do utworzenia GitHub Release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # żeby changelog miał dostęp do całej historii

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install
        run: npm ci
        env:
          HUSKY: 0

      # (Opcjonalnie) upewnij się, że projekt nadal się buduje
      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Build
        run: npm run build

      # Zbuduj changelog z commitów od poprzedniego taga do aktualnego
      - name: Generate release notes (Conventional Commits)
        id: notes
        uses: mikepenz/release-changelog-builder-action@v5
        with:
          configuration: .github/release-changelog-builder-config.json
          fromTag: ${{ github.event.before }}   # fallback, ale action i tak znajdzie poprzedni tag
          toTag: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Utwórz GitHub Release z wygenerowanym changelogiem
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.changelog }}
          draft: false
          prerelease: ${{ contains(github.ref, '-beta') || contains(github.ref, '-rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
